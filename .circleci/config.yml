version: 2.1

# To help debugging circleci config changes you may want
# to run the generate_config.sh script locally and
# then copy the contents from generated_config.yml into the config.yml file.

# this allows you to use CircleCI's dynamic configuration feature
setup: true

# the continuation orb is required in order to use dynamic configuration
orbs:
  continuation: circleci/continuation@0.1.2

# parameters from github actions
parameters:
  build_and_test_all:
    type: boolean
    default: false
  build_and_test_backend:
    type: boolean
    default: false
  build_and_test_frontend:
    type: boolean
    default: false
  deploy_infrastructure:
    type: boolean
    default: false
  develop_branch_deploy:
    type: boolean
    default: false
  run_dev_deployment:
    type: boolean
    default: false
  run_nightly_owasp_scan:
    type: boolean
    default: false
  run_owasp_scan:
    type: boolean
    default: false
  target_env:
    type: string
    default: ''
  triggered:
    type: boolean
    default: false
  util_make_erd:
    type: boolean
    default: false

jobs:
  setup:
    executor: continuation/default
    steps:
      - checkout # checkout code
      - run: # run a command
          name: Generate config
          command: |
            cd .circleci
            chmod +x generate_config.sh
            ./generate_config.sh
      - continuation/continue:
          configuration_path: .circleci/generated_config.yml # use newly generated config to continue

# our single workflow, that triggers the setup job defined above
workflows:
  github-triggered-setup:
    when: << pipeline.parameters.triggered >>
    jobs:
      - setup:
          filters:
            branches:
              ignore:
                - main
                - master
                - /^release.*/
  circle-ci-setup:
    jobs:
      - setup:
          filters:
            branches:
              only:
                - main
                - master
                - /^release.*/      
      
