# commands:
  deploy-infrastructure:
    parameters:
      tf-path:
        type: string
        default: ./terraform/dev
      cf-password:
        type: env_var_name
        default: CF_PASSWORD_DEV
      cf-username:
        type: env_var_name
        default: CF_USERNAME_DEV
      cf-space:
        type: string
        default: tanf-dev
      cf-org:
        type: env_var_name
        default: CF_ORG
      cf-app:
        type: string
        default: CF_APP
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk update
            apk add jq
            apk add curl
            # TODO: Add Signature check
            curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v7&source=github" | tar -zx
            mv cf7 /usr/local/bin/cf
      - login-cloud-dot-gov:
          cf-password: <<parameters.cf-password>>
          cf-username: <<parameters.cf-username>>
          cf-space: <<parameters.cf-space>>
      - run:
          name: Export S3 Credentials for TFState
          command: |
            S3_CREDENTIALS=$(cf service-key tdp-tf-states tdp-tf-key | tail -n +2)
            {
              echo "access_key = \"$(echo "${S3_CREDENTIALS}" | jq -r .access_key_id)\""
              echo "secret_key = \"$(echo "${S3_CREDENTIALS}" | jq -r .secret_access_key)\""
              echo "region = \"$(echo "${S3_CREDENTIALS}" | jq -r '.region')\""
              echo "bucket = \"$(echo "${S3_CREDENTIALS}" | jq -r '.bucket')\""
            } >> ./backend_config.tfvars
      - run:
          name: Prepare Terraform Variables
          command: |
            S3_CREDENTIALS=$(cf service-key tdp-tf-states tdp-tf-key | tail -n +2)
            {
              echo "cf_password = \"$<<parameters.cf-password>>\""
              echo "cf_user = \"$<<parameters.cf-username>>\""
              echo "cf_space_name = \"<<parameters.cf-space>>\""
              echo "cf_app_name = \"<<parameters.cf-app>>\""
            } >> ./variables.tfvars
      - terraform/init:
          path: <<parameters.tf-path>>
          backend_config_file: ./backend_config.tfvars
      - terraform/validate:
          path: <<parameters.tf-path>>
      - terraform/fmt:
          path: <<parameters.tf-path>>
      - terraform/plan:
          path: <<parameters.tf-path>>
          var_file: ./variables.tfvars
      - terraform/apply:
          path: <<parameters.tf-path>>
          var_file: ./variables.tfvars

  enable-s3-versioning:
    parameters:
      target_env:
        type: string
      cf-password:
        type: env_var_name
      cf-username:
        type: env_var_name
      cf-space:
        type: string
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt update
            sudo apt install jq
            sudo apt install curl
            # TODO: Add Signature check
            curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v7&source=github" | tar -zx
            sudo mv cf7 /usr/local/bin/cf
            sudo chmod +x /usr/local/bin/cf
            # curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            # unzip awscliv2.zip
            # sudo ./aws/install
      - login-cloud-dot-gov:
          cf-password: <<parameters.cf-password>>
          cf-username: <<parameters.cf-username>>
          cf-space: <<parameters.cf-space>>
      - run:
          name: Ensure s3 service key exists
          # use cf to check if a service key exists for tdp-datafiles-dev(or prod) 
          # if it does not exist, create it
          command: |
            cf service-key tdp-datafiles-<<parameters.target_env>> s3-versioning-key > /tmp/cf_aws_creds.json
            if sed -n '2p' /tmp/cf_aws_creds.json | grep -q "FAILED"; then
              echo "Service key does not exist"
              cf create-service-key tdp-datafiles-<<parameters.target_env>> s3-versioning-key
              cf service-key tdp-datafiles-<<parameters.target_env>> s3-versioning-key > /tmp/cf_aws_creds.json
              echo "key named s3-versioning-key created for service tdp-datafiles-<<parameters.target_env>>"
            else
              echo "Service key exists"
            fi
      - run:
          name: set up aws credentials
          command: |
            S3_CREDENTIALS=$(cf service-key tdp-datafiles-<<parameters.target_env>> s3-versioning-key | tail -n +2)
            aws configure set aws_access_key_id $(echo "${S3_CREDENTIALS}" | jq -r .access_key_id)
            aws configure set aws_secret_access_key $(echo "${S3_CREDENTIALS}" | jq -r .secret_access_key)
            aws configure set default.region $(echo "${S3_CREDENTIALS}" | jq -r '.region')
      - run:
          name: Enable S3 Versioning
          command: |
            S3_BUCKET_ID=cg-$(cf service tdp-datafiles-<<parameters.target_env>> --guid)
            aws s3api put-bucket-versioning --bucket ${S3_BUCKET_ID} --versioning-configuration Status=Enabled
