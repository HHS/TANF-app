# jobs:
  deploy-dev:
    parameters:
      target_env:
        type: string
    executor: docker-executor
    working_directory: ~/tdp-deploy
    steps:
      - deploy-cloud-dot-gov:
          backend-appname: tdp-backend-<< parameters.target_env >>
          frontend-appname: tdp-frontend-<< parameters.target_env >>

  deploy-staging:
    executor: docker-executor
    working_directory: ~/tdp-deploy
    steps:
      - deploy-cloud-dot-gov:
          backend-appname: tdp-backend-staging
          frontend-appname: tdp-frontend-staging
          cf-password: CF_PASSWORD_STAGING
          cf-space: tanf-staging
          cf-username: CF_USERNAME_STAGING

  deploy-develop:
    executor: docker-executor
    working_directory: ~/tdp-deploy
    steps:
      - deploy-cloud-dot-gov:
          backend-appname: tdp-backend-develop
          frontend-appname: tdp-frontend-develop
          cf-password: CF_PASSWORD_STAGING
          cf-space: tanf-staging
          cf-username: CF_USERNAME_STAGING

  deploy-infrastructure-dev:
    parameters:
      target_env:
        type: string
    executor: terraform/default
    working_directory: ~/tdp-deploy
    steps:
      - deploy-infrastructure:
                cf-app: << parameters.target_env >>

  deploy-infrastructure-staging:
    executor: terraform/default
    working_directory: ~/tdp-deploy
    steps:
      - deploy-infrastructure:
          cf-password: CF_PASSWORD_STAGING
          cf-username: CF_USERNAME_STAGING
          cf-space: tanf-staging
          tf-path: ./terraform/staging

  deploy-infrastructure-production:
    executor: terraform/default
    working_directory: ~/tdp-deploy
    steps:
      - deploy-infrastructure:
          cf-password: CF_PASSWORD_PROD
          cf-username: CF_USERNAME_PROD
          cf-space: tanf-prod
          tf-path: ./terraform/production

  deploy-project-updates-site:
    parameters:
      cf-org:
        default: CF_ORG
        type: env_var_name
      cf-space:
        default: tanf-dev
        type: string
      cf-password:
        type: env_var_name
        default: CF_PASSWORD_DEV
      cf-username:
        type: env_var_name
        default: CF_USERNAME_DEV
    executor: docker-executor
    working_directory: ~/tdp-deploy
    steps:
      - checkout
      - sudo-check
      - cf-check
      - login-cloud-dot-gov:
          cf-password: <<parameters.cf-password>>
          cf-org: <<parameters.cf-org>>
          cf-space: <<parameters.cf-space>>
          cf-username: <<parameters.cf-username>>
      - run:
          name: Deploy TDP Project Updates Site
          command: ./scripts/deploy-tdp-product-update-site.sh rolling tdp-project-updates

  enable-versioning:
    executor: machine-executor
    parameters:
      target_env:
        type: string
        default: dev
      cf-password:
        type: env_var_name
        default: CF_PASSWORD_DEV
      cf-username:
        type: env_var_name
        default: CF_USERNAME_DEV
      cf-space:
        type: string
        default: tanf-dev
    steps:
      - enable-s3-versioning:
          target_env: <<parameters.target_env>>
          cf-password: <<parameters.cf-password>>
          cf-username: <<parameters.cf-username>>
          cf-space: <<parameters.cf-space>>

  test-deployment-e2e:
    executor: machine-executor
    working_directory: ~/tdp-apps
    steps:
      - checkout
      - install-nodejs-machine
      - disable-npm-audit
      - install-nodejs-packages:
          app-dir: tdrs-frontend
      - run:
          name: Run Cypress e2e tests
          command: cd tdrs-frontend; npm run test:e2e-ci -- --config baseUrl="https://tdp-frontend-develop.acf.hhs.gov" --env cypressToken=$CYPRESS_TOKEN,apiUrl="https://tdp-frontend-develop.acf.hhs.gov/v1",adminUrl="https://tdp-frontend-develop.acf.hhs.gov/admin"
      - store_artifacts:
          path: tdrs-frontend/cypress/screenshots/
      - store_artifacts:
          path: tdrs-frontend/cypress/videos/

  deploy-production:
    executor: docker-executor
    working_directory: ~/tdp-deploy
    steps:
      - deploy-cloud-dot-gov:
          environment: production
          backend-appname: tdp-backend-prod
          frontend-appname: tdp-frontend-prod
          cf-password: CF_PASSWORD_PROD
          cf-space: tanf-prod
          cf-username: CF_USERNAME_PROD
  prod-deploy-clamav:
    executor: docker-executor
    working_directory: ~/tdp-deploy
    steps:
      - clamav-cloud-dot-gov:
          backend-appname: tdp-backend-prod
          cf-password: CF_PASSWORD_PROD
          cf-space: tanf-prod
          cf-username: CF_USERNAME_PROD
