# jobs:
  deploy-dev:
    executor: docker-executor
    parameters:
      target_env:
        type: string
    working_directory: ~/tdp-deploy
    steps:
      - deploy-cloud-dot-gov:
          backend-appname: tdp-backend-<< parameters.target_env >>
          frontend-appname: tdp-frontend-<< parameters.target_env >>

  deploy-staging:
    executor: docker-executor
    working_directory: ~/tdp-deploy
    steps:
      - deploy-cloud-dot-gov:
          backend-appname: tdp-backend-staging
          frontend-appname: tdp-frontend-staging
          cf-password: CF_PASSWORD_STAGING
          cf-space: tanf-staging
          cf-username: CF_USERNAME_STAGING
  
  deploy-develop:
    executor: docker-executor
    working_directory: ~/tdp-deploy
    steps:
      - deploy-cloud-dot-gov:
          backend-appname: tdp-backend-develop
          frontend-appname: tdp-frontend-develop
          cf-password: CF_PASSWORD_STAGING
          cf-space: tanf-staging
          cf-username: CF_USERNAME_STAGING

  test-deployment-e2e:
    executor: machine-executor
    working_directory: ~/tdp-apps
    steps:
      - checkout
      - install-nodejs-machine
      - disable-npm-audit
      - install-nodejs-packages:
          app-dir: tdrs-frontend
      - run:
          name: Run Cypress e2e tests
          command: cd tdrs-frontend; npm run test:e2e-develop
      - store_artifacts:
          path: tdrs-frontend/cypress/screenshots/
      - store_artifacts:
          path: tdrs-frontend/cypress/videos/

  deploy-production:
    executor: docker-executor
    working_directory: ~/tdp-deploy
    steps:
      - deploy-cloud-dot-gov:
          environment: production
          backend-appname: tdp-backend-prod
          frontend-appname: tdp-frontend-prod
          cf-password: CF_PASSWORD_PROD
          cf-space: tanf-prod
          cf-username: CF_USERNAME_PROD
