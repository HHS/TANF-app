# ## Local Development Environment
# Copy this file to `.env` and replace variables as needed
# 

# ##
# Required environment variables
# These must be defined or the application will encounter fatal errors
# Ask the project Tech Lead or Product Manager for these values
# 

# Private JWT Key used to generate the client assertion
JWT_KEY=a_secret_key

# Base64 encoded public cert used for CI/CD pipeline testing
JWT_CERT_TEST=a_public_cert

# Initial superuser username should be the developer's login.gov email address
DJANGO_SU_NAME=dev.email@example.com


# ## AMS OpenID vars ###

AMS_CONFIGURATION_ENDPOINT=
AMS_CLIENT_ID=
AMS_CLIENT_SECRET=

# ##
# Optional environment variables
# These need not be defined, but can be overwritten as needed
# 
LOGGING_LEVEL=DEBUG

# Local django settings to define the execution environment
DJANGO_SETTINGS_MODULE=tdpservice.settings.local
DJANGO_CONFIGURATION=Local

# Whether or not to run collectstatic on Django startup
DISABLE_COLLECTSTATIC=1

# Sets the URL values used for redirects
FRONTEND_BASE_URL=http://localhost:3000
BASE_URL=http://localhost:3000/v1

# Parameters defined in the login.gov documentation
# ref: https://developers.login.gov/oidc/
ACR_VALUES=http://idmanagement.gov/ns/assurance/ial/1
CLIENT_ASSERTION_TYPE=urn:ietf:params:oauth:client-assertion-type:jwt-bearer
CLIENT_ID=urn:gov:gsa:openidconnect.profiles:sp:sso:hhs:tanf-proto-dev
OIDC_OP_ISSUER=https://idp.int.identitysandbox.gov/
OIDC_OP_JWKS_ENDPOINT=https://idp.int.identitysandbox.gov/api/openid_connect/certs
OIDC_OP_AUTHORIZATION_ENDPOINT=https://idp.int.identitysandbox.gov/openid_connect/authorize
OIDC_OP_LOGOUT_ENDPOINT=https://idp.int.identitysandbox.gov/openid_connect/logout
OIDC_OP_TOKEN_ENDPOINT=https://idp.int.identitysandbox.gov/api/openid_connect/token
OIDC_OP_USER_ENDPOINT=https://idp.int.identitysandbox.gov/api/openid_connect/userinfo

# mock token for unit testing
MOCK_TOKEN=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJiMmQyZDExNS0xZDdlLTQ1NzktYjlkNi1mOGU4NGY0ZjU2Y2EiLCJpc3MiOiJodHRwczovL2lkcC5pbnQubG9naW4uZ292IiwiYWNyIjoiaHR0cDovL2lkbWFuYWdlbWVudC5nb3YvbnMvYXNzdXJhbmNlL2xvYS8xIiwibm9uY2UiOiJhYWQwYWE5NjljMTU2YjJkZmE2ODVmODg1ZmFjNzA4MyIsImF1ZCI6InVybjpnb3Y6Z3NhOm9wZW5pZGNvbm5lY3Q6ZGV2ZWxvcG1lbnQiLCJqdGkiOiJqQzdOblU4ZE5OVjVsaXNRQm0xanRBIiwiYXRfaGFzaCI6InRsTmJpcXIxTHIyWWNOUkdqendsSWciLCJjX2hhc2giOiJoWGpxN2tPcnRRS196YV82dE9OeGN3IiwiZXhwIjoxNDg5Njk0MTk2LCJpYXQiOjE0ODk2OTQxOTgsIm5iZiI6MTQ4OTY5NDE5OH0.pVbPF-2LJSG1fE9thn27PwmDlNdlc3mEm7fFxb8ZADdRvYmDMnDPuZ3TGHl0ttK78H8NH7rBpH85LZzRNtCcWjS7QcycXHMn00Cuq_Bpbn7NRdf3ktxkBrpqyzIArLezVJJVXn2EeykXMvzlO-fJ7CaDUaJMqkDhKOK6caRYePBLbZJFl0Ri25bqXugguAYTyX9HACaxMNFtQOwmUCVVr6WYL1AMV5WmaswZtdE8POxYdhzwj777rkgSg555GoBDZy3MetapbT0csSWqVJ13skWTXBRrOiQQ70wzHAu_3ktBDXNoLx4kG1fr1BiMEbHjKsHs14X8LCBcIMdt49hIZg

# cloud environments should hold a valid value which can be generated using
# `python -c "from secrets import token_urlsafe; print(token_urlsafe(50))"`
DJANGO_SECRET_KEY=local

# AV Scanning settings
AV_SCAN_BACKOFF_FACTOR=1
AV_SCAN_MAX_RETRIES=5
AV_SCAN_TIMEOUT=30

# DRF API default page size
DJANGO_PAGINATION_LIMIT=10

# Whether or not to use Localstack for S3 storage
USE_LOCALSTACK=yes

# AWS settings to use when USE_LOCALSTACK is set to "no"
AWS_ACCESS_KEY=my-access-key-id
AWS_SECRET_ACCESS_KEY=my-secret-access-key
AWS_BUCKET=my-bucket-name
AWS_REGION_NAME=us-gov-west-1

# Database startup script options
POSTGRES_CHECK_TIMEOUT=30
POSTGRES_CHECK_INTERVAL=1

# Elastic stack
ELASTIC_HOST=elastic:9200

# testing
CYPRESS_TOKEN=local-cypress-token

# sftp
ACFTITAN_SFTP_PYTEST=local-acftitan-key
