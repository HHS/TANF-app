local.file_match "system" {
	path_targets = [{
		__address__ = "localhost",
		__path__    = "/var/log/*log",
		job         = sys.env("ALLOY_SYSTEM_NAME"),
	}]
}

loki.source.file "system" {
	targets               = local.file_match.system.targets
	forward_to            = [loki.write.default.receiver]
	legacy_positions_file = "/tmp/positions.yaml"
}

local.file_match "backend" {
	path_targets = [{
		__address__ = "localhost",
		__path__    = "/tmp/django.log",
		job         = sys.env("ALLOY_BACKEND_NAME"),
	}]
}

loki.process "backend_process" {
	forward_to = [loki.write.default.receiver]

	stage.regex {
		expression = "^(?P<time>\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3}) (?P<level>\\w+) (?P<logger>\\S+) (?P<message>.*)$"
	}

	stage.labels {
		values = {
			level   = null,
			logger  = null,
			message = null,
			time    = null,
		}
	}
}

loki.source.file "backend" {
	targets               = local.file_match.backend.targets
	forward_to            = [loki.process.backend_process.receiver]
	legacy_positions_file = "/tmp/positions.yaml"
}

loki.write "default" {
	endpoint {
		url = "http://loki.apps.internal:8080/loki/api/v1/push"
	}
	external_labels = {}
}
