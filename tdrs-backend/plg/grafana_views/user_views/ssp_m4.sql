-- AUTOMATICALLY GENERATED FILE ON 2025-06-26 11:36:44
-- DO NOT EDIT - Your changes will be overwritten
-- Generated by generate_views.py

-- SQL view for ssp_m4 schema
-- Transformations applied:


CREATE OR REPLACE VIEW "ssp_m4" AS 
SELECT "RecordType","RPT_MONTH_YEAR","CASE_NUMBER","STRATUM","ZIP_CODE","DISPOSITION","CLOSURE_REASON","REC_SUB_HOUSING","REC_MED_ASSIST","REC_FOOD_STAMPS","REC_SUB_CC",
    data_files.section,
    data_files.version,
    data_files.year,
    data_files.quarter,
    stt.name AS "STT",                                                         -- Select stt_name from the stts table
    stt.stt_code AS "STT_CODE",                                                -- Select stt_code from the stts table
    stt.region_id AS "REGION"                                                  -- Select region from the stts table
FROM search_indexes_SSP_M4 M4
INNER JOIN
        data_files_datafile data_files                                             -- Join with data_files_datafile
        ON M4.datafile_id = data_files.id                              -- Join condition
    INNER JOIN (
        SELECT
            stt_id,                                                                -- Select stt_id
            section,                                                               -- Select section
            year,                                                                  -- Select fiscal_year
            quarter,                                                               -- Select fiscal_quarter
            MAX(version) AS version                                                -- Get the maximum version for each group
        FROM
            data_files_datafile                                                    -- Subquery table
        GROUP BY
            stt_id, section, year, quarter                                         -- Group by columns
    ) most_recent
        ON data_files.stt_id = most_recent.stt_id
        AND data_files.section = most_recent.section
        AND data_files.version = most_recent.version
        AND data_files.year = most_recent.year
        AND data_files.quarter = most_recent.quarter
    INNER JOIN
        stts_stt stt                                                               -- Join with the stts table (aliased as stt)
        ON data_files.stt_id = stt.id                                              -- Join condition to match stt_id
    WHERE
        data_files.year > 2020 AND                                                 -- Filter for fiscal year
        data_files.quarter in ('Q1', 'Q2', 'Q3', 'Q4')                         -- Filter for fiscal quarters
        
;
