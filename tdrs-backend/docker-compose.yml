# Base Docker compose for all environments
version: "3.4"

services:
  zaproxy:
    image: tdp-docker.dev.raftlabs.tech/dependencies/softwaresecurityproject/zap-stable:2.14.0
    command: sleep 3600
    depends_on:
      - web
    volumes:
      - ./reports:/zap/wrk/:rw
      - ../scripts/zap-hook.py:/zap/scripts/zap-hook.py:ro

  postgres:
    image: tdp-docker.dev.raftlabs.tech/dependencies/postgres:15.7
    environment:
      - PGDATA=/var/lib/postgresql/data/
      - POSTGRES_DB=tdrs_test
      - POSTGRES_PASSWORD=something_secure
      - POSTGRES_PORT=5432
      - POSTGRES_USER=tdpuser
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/:rw

  grafana-pg:
    image: tdp-docker.dev.raftlabs.tech/dependencies/postgres:15.7
    environment:
      - PGDATA=/var/lib/postgresql/data/
      - POSTGRES_DB=grafana
      - POSTGRES_PASSWORD=something_secure
      - POSTGRES_PORT=5432
      - POSTGRES_USER=grafana
    ports:
      - "5433:5432"
    volumes:
      - grafana_pg_data:/var/lib/postgresql/data/:rw

  clamav-rest:
    image: tdp-docker.dev.raftlabs.tech/dependencies/rafttech/clamav-rest:0.103.2
    environment:
      - MAX_FILE_SIZE=200M
    ports:
      - "9000:9000"

  localstack:
    image: tdp-docker.dev.raftlabs.tech/dependencies/localstack/localstack:0.13.3
    environment:
      - SERVICES=s3
      - DATA_DIR=/tmp/localstack/data
      - AWS_BUCKET=tdp-datafiles-localstack
      - AWS_REGION_NAME=us-gov-west-1
    ports:
      - "4566:4566"
    volumes:
      - localstack_data:/tmp/localstack
      # Copy in the Localstack setup script to configure any buckets needed
      - ../scripts/localstack-setup.sh:/docker-entrypoint-initaws.d/localstack-setup.sh

  kibana:
    image: tdp-docker.dev.raftlabs.tech/dependencies/docker.elastic.co/kibana/kibana-oss:7.10.2
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS="http://elastic:9200"
      - SERVER_HOST=kibana
      - SERVER_BASEPATH=/kibana
      - SERVER_SECURITYRESPONSEHEADERS_REFERRERPOLICY=no-referrer
      - CSP_WARNLEGACYBROWSERS=false
    volumes:
      - ./search_indexes/kibana_saved_objs.ndjson:/usr/share/kibana/kibana_saved_objs.ndjson
    depends_on:
      - elastic

  elastic:
    image: tdp-docker.dev.raftlabs.tech/dependencies/docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    environment:
      - discovery.type=single-node
      - logger.discovery.level=debug
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

  grafana:
    restart: always
    image: grafana/grafana:11.2.0
    ports:
      - 9400:9400
    environment:
      - GF_PATHS_PROVISIONING=/usr/share/grafana/conf/provisioning
      - GF_SERVER_HTTP_PORT=9400
    volumes:
      - ./plg/grafana/datasources.local.yml:/usr/share/grafana/conf/provisioning/datasources/datasources.yml
      - ./plg/grafana/providers.local.yml:/usr/share/grafana/conf/provisioning/dashboards/providers.yml
      - ./plg/grafana/dashboards:/var/lib/grafana/dashboards
      - ./plg/grafana/custom.local.ini:/usr/share/grafana/conf/custom.ini
      - grafana_data:/var/lib/grafana
    command: --config /usr/share/grafana/conf/custom.ini
    depends_on:
      - grafana-pg

  prometheus:
    restart: always
    image: prom/prometheus:v2.54.1
    ports:
      - 9090:9090
    volumes:
      - ./plg/prometheus/prometheus.local.yml:/etc/prometheus/prometheus.yml
      - ./plg/prometheus/django_rules.yml:/etc/prometheus/django_rules.yml
      - prometheus_data:/prometheus
    depends_on:
      - web
      - celery-exporter
      - postgres-exporter

  promtail:
    restart: always
    image: grafana/promtail:3.1.1
    ports:
      - 9080:9080
    volumes:
      - ./plg/promtail/config.local.yml:/etc/promtail/config.yml
      - ~/tdp-logs/nginx:/var/log/nginx
      - logs:/logs
    command: -config.file=/etc/promtail/config.yml

  loki:
    restart: always
    image: grafana/loki:3.1.1
    ports:
      - 3100:3100
    volumes:
      - loki_data:/loki
      - ./plg/loki/loki.local.yml:/loki/loki.yml
    command: -config.file=/loki/loki.yml

  celery-exporter:
    restart: always
    image: ovalmoney/celery-exporter:1.5.1
    ports:
      - 9540:9540
    environment:
      - CELERY_EXPORTER_BROKER_URL=redis://redis-server:6379/0
    depends_on:
      - web

  postgres-exporter:
    restart: always
    image: prometheuscommunity/postgres-exporter:v0.15.0
    ports:
      - 9187:9187
    environment:
      - DATA_SOURCE_NAME=postgres://tdpuser:something_secure@postgres:5432/tdrs_test?sslmode=disable
    depends_on:
      - web

  web:
    restart: always
    environment:
      - CLAMAV_NEEDED
      - AV_SCAN_URL=http://clamav-rest:9000/scan
      - DB_HOST=postgres
      - DB_NAME=tdrs_test
      - DB_PASSWORD=something_secure
      - DB_PORT=5432
      - DB_USER=tdpuser
      - DJANGO_CONFIGURATION=${DJANGO_CONFIGURATION:-Local}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-tdp-dev-insecure}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-tdpservice.settings.local}
      - LOCALSTACK_HOST=localstack
      - DJANGO_SU_NAME
      - JWT_CERT_TEST
      - JWT_KEY
      - USE_LOCALSTACK
      - LOGGING_LEVEL
      - AMS_CLIENT_ID
      - AMS_CLIENT_SECRET
      - AMS_CONFIGURATION_ENDPOINT
      - REDIS_URI=redis://redis-server:6379
      - REDIS_SERVER_LOCAL=TRUE
      - CYPRESS_TOKEN
      - DJANGO_DEBUG
      - SENDGRID_API_KEY
      - GENERATE_TRAILER_ERRORS=True
      - BYPASS_OFA_AUTH
      - ELASTICSEARCH_REINDEX_THREAD_COUNT
      - ELASTICSEARCH_REINDEX_CHUNK_SIZE
      - ELASTICSEARCH_REINDEX_REQUEST_TIMEOUT
      - ELASTICSEARCH_LOG_SEARCH_SLOW_THRESHOLD_WARN
      - ELASTICSEARCH_LOG_SEARCH_SLOW_THRESHOLD_INFO
      - ELASTICSEARCH_LOG_SEARCH_SLOW_THRESHOLD_TRACE
      - ELASTICSEARCH_LOG_SEARCH_SLOW_LEVEL
      - ELASTICSEARCH_LOG_INDEX_SLOW_THRESHOLD_WARN
      - ELASTICSEARCH_LOG_INDEX_SLOW_THRESHOLD_INFO
      - ELASTICSEARCH_LOG_INDEX_SLOW_THRESHOLD_TRACE
      - ELASTICSEARCH_LOG_INDEX_SLOW_LEVEL
    volumes:
      - .:/tdpapp
      - logs:/tmp
    image: tdp-backend
    build: .
    command: >
      bash -c "./wait_for_services.sh &&
      ./manage.py makemigrations &&
      ./manage.py migrate &&
      ./manage.py populate_stts &&
      ./gunicorn_start.sh && celery -A tdpservice.settings worker -l info"
    ports:
      - "5555:5555"
    tty: true
    depends_on:
      - clamav-rest
      - localstack
      - postgres
      - redis-server
      - elastic

  redis-server:
    image: tdp-docker.dev.raftlabs.tech/dependencies/redis:alpine
    command: redis-server /tdpapp/redis.conf
    ports:
      - "6379:6379"
    volumes:
      - .:/tdpapp

volumes:
  localstack_data:
  postgres_data:
  grafana_pg_data:
  elastic_data:
  prometheus_data:
  grafana_data:
  loki_data:
  logs:


networks:
  default:
      name: external-net
      external: true
