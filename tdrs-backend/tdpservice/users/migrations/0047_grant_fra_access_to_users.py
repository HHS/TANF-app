# Generated by Django 3.2.15 on 2025-06-23 18:29

from django.db import migrations, models

def grant_fra_access_permission(apps, schema_editor):
    User = apps.get_model('users', 'User')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    # Get the correct permission object
    try:
        fra_permission = Permission.objects.get(codename='has_fra_access')
    except Permission.DoesNotExist:
        print("FRA permission 'has_fra_access' does not exist. Skipping migration.")
        return

    # Filter users who currently have the feature flag
    users_with_flag = User.objects.filter(feature_flags__has_key='has_fra_access')

    for user in users_with_flag:
        user.user_permissions.add(fra_permission)
        user.feature_flags.pop('has_fra_access', None)
        user.save()

class Migration(migrations.Migration):

    dependencies = [
        ('users', '0046_add_fra_access_permission'),
    ]

    operations = [
        migrations.AlterField(
            model_name='user',
            name='feature_flags',
            field=models.JSONField(blank=True, default=dict, help_text='Feature flags for this user. This is a JSON field that can be used to store key-value pairs. E.g: {"some_feature": true}'),
        ),
        migrations.RunPython(grant_fra_access_permission)
    ]
