
location ~ ^/(v1|admin|static/admin|swagger|redocs) {
        limit_req zone=limitreqsbyaddr;
        resolver 169.254.0.2;
        set $backend http://{{env "BACKEND_HOST"}}.apps.internal:8080$request_uri;
        proxy_pass $backend;
        proxy_pass_header x-csrftoken;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto https;

        proxy_connect_timeout 900;
        proxy_read_timeout    300;
        proxy_send_timeout    300;
        send_timeout 	      900;
        proxy_buffer_size     4k;
        proxy_temp_file_write_size 64k;

        limit_except GET HEAD POST PATCH { deny all;
        }

        add_header Access-Control-Allow-Origin 's3-us-gov-west-1.amazonaws.com';
        add_header Access-Control-Allow-Origin 's3-fips.us-gov-west-1.amazonaws.com';
}

location /collect {
        set $faro http://{{env "BACKEND_HOST"}}.apps.internal:12346$request_uri;
        proxy_pass $faro;
        proxy_set_header   Host $host:3000;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_connect_timeout 300;
        proxy_read_timeout    300;
        proxy_send_timeout    300;
        send_timeout          900;
        proxy_buffer_size     4k;
}

location /grafana/ {
        auth_request /plg_auth_check;
        auth_request_set $auth_status $upstream_status;
        error_page 401 403 = @redirect_to_login;

        set $grafana http://grafana.apps.internal:8080$request_uri;
        proxy_pass $grafana;
        proxy_set_header   Host $host:3000;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto https;

        proxy_connect_timeout 300s;
        proxy_read_timeout    300s;
        proxy_send_timeout    300s;
        send_timeout          900s;
        proxy_buffer_size     12k;
}

location /alerts/ {
        auth_request /plg_auth_check;
        auth_request_set $auth_status $upstream_status;
        error_page 401 403 = @redirect_to_login;

        set $alerts http://alertmanager.apps.internal:8080$request_uri;
        proxy_pass $alerts;
        proxy_set_header   Host $host:3000;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto https;

        proxy_connect_timeout 300;
        proxy_read_timeout    300;
        proxy_send_timeout    300;
        send_timeout          900;
        proxy_buffer_size     4k;
}

location = /plg_auth_check {
    internal;
    set $endpoint http://{{env "BACKEND_HOST"}}.apps.internal:8080/plg_auth_check/;
    proxy_pass $endpoint$1$is_args$args;
    proxy_set_header   Host $host:3000;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto https;
    proxy_set_header   Content-Length "";
    proxy_set_header   X-Original-URI $request_uri;

    proxy_connect_timeout 300;
    proxy_read_timeout    300;
    proxy_send_timeout    300;
    send_timeout          900;
    proxy_pass_header x-csrftoken;
}

if ($request_method ~ ^(TRACE|OPTION)$) {
			return 405;
}

location = /profile {
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
}

location = /home {
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
}

location ^~ /data-files {
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
}

location = /login {
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
}

location = / {
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
}

error_page 500 502 504 /50x.html;

error_page 404 /index.html;

location @redirect_to_login {
  return 302 /login;
}
